C51 COMPILER V9.51   OPERATION                                                             06/04/2014 15:22:55 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE OPERATION
OBJECT MODULE PLACED IN operation.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE operation.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*-------------------------------------------------------------
   2                  operation.c
   3                  operation in all case
   4          --------------------------------------------------------------*/
   5          
   6          #include "main.h"
   7          #include "port.h"
   8          
   9          #include "operation.h"
  10          #include "other.h"
  11          #include "voice.h"
  12          #include "battery.h"
  13          #include "delay.h"
  14          #include "AD.h"
  15          
  16          /*------- Public variable declarations --------------------------*/
  17          extern bit slave_away_speech_EN;      
  18          extern bit slave_nearby_speech_EN;     
  19          extern bit position_sensor_EN;                  //位置传感器，即倒地抬起传感器总开关，1的时候，检测这两个传感器
  20          extern bit slave_away;                                  //模式选择位，1则用模式1,2则用模式2,3则为模式3
  21          extern bit magnet_CW_EN;                                        //电磁铁顺时针转动使能，转动一次后复位为0
  22          extern bit fell_flag;                                           //判断主机倒下后，置1
  23          extern bit raised_flag;                                 //判断主机被抬起后，置1
  24          extern tByte sensor_trigger_count;              //传感器触发计数
  25          extern tByte sensor_1ststage_count;     //传感器第一阶段判断低电平的计数
  26          extern tByte leave_count;                                       // increment every 2s, reset for every success communication
  27          extern bit raised_fell_once_flag;                       //raised_fell_flag是否曾经标志过，如果标志过则置1.然后主机被恢复倒地或
             -者恢复抬起时，此标志位复位。
  28          extern bit raised_fell_flag;                                    //倒地或者抬起触发后，此标志位置1
  29          extern bit host_stolen_alarm1_EN;      //判断为被盗报警后的第一段语音使能
  30          extern bit host_stolen_alarm2_EN;      //判断为被盗报警后的第二段语音使能
  31          extern tByte host_stolen_alarm1_count;          //判断为被盗报警后的第一段语音次数
  32          extern tByte host_stolen_alarm2_count;          //判断为被盗报警后的第二段语音次数
  33          extern bit stolen_alarm_flag;                                   // when host been touch 3 times, this flag 1 before alarm voice present,
             - not to detect sensor for 1st voice alarm.
  34          extern tWord sensor_3rdstage_time;                      //传感器进入第三阶段的时间，
  35          extern tByte sensor_3rdstage_effcount;          //传感器进入第三阶段后，有效触碰次数的计数
  36          extern tByte sensor_3rdstage_count;                     //传感器进入第三阶段后，低电平的计数
  37          extern tWord sensor_3rdstage_interval;          //传感器在第三阶段中，每次有效低电平计数之间的时间间隔。在这期间的
             -低电平不认为有效。
  38          extern tWord sensor_2ndstage_time;              //传感器进入第二阶段后流逝时间的计数
  39          extern tByte sensor_2ndstage_count;             //传感器进入第二阶段检测时，计算低电平的时间
  40          extern tByte nearby_away_interval;              //附机离开和靠近时，语音提示和开关锁的时间间隔
  41          extern bit slave_nearby_EN;                     // 作为slave靠近后操作的使能
  42          extern tByte slave_nearby_operation_count;      // 作为slave靠近后操作的次数
  43          extern tByte key_rotated_on_flag;                       //电动车开启关闭标志位，1表示电动车开启了，0表示电动车关闭了
  44          extern tWord ADC_check_result;          //作为AD检测值
  45          extern tByte wire_broken_count;         // 作为断线后的时间检测
  46          extern bit sensor_3rdalarm_flag;
  47          extern bit ADC_timecount_EN;
  48          bit BAT_Lowflag = 0;                            // 电池电量低的标志位
  49          bit enable_sensor_delayEN = 0;          // 关钥匙后，延迟传感器的打开
  50          
  51          /*-----------------------------------------
  52                  slave_away_operation().c
C51 COMPILER V9.51   OPERATION                                                             06/04/2014 15:22:55 PAGE 2   

  53                  
  54                  operation for slave is away
  55          ------------------------------------------*/
  56          void slave_away_operation(void)
  57                  {
  58   1              // turn off the magnet 
  59   1              while(wheeled_flag);
  60   1              magnet_ACW();
  61   1              
  62   1              // speech for slave away
  63   1              slave_away_speech();
  64   1              
  65   1      //      enable_sensor();        
  66   1              enable_sensor_delayEN = 1;
  67   1              
  68   1              // turn off ADC timer
  69   1      //      ADC_timecount_EN = 0;
  70   1              
  71   1              // delay time, avoid sensor trigger on. 
  72   1              Delay(20);
  73   1              }
  74          
  75          /*----------------------------------------------------------------------
  76                          slave_nearby_operation()
  77                          operation for slave is nearby
  78          ----------------------------------------------------------------------*/
  79          void slave_nearby_operation(void)
  80                  {       
  81   1              // turn on the magnet
  82   1              magnet_CW();
  83   1      
  84   1              // speech for slave nearby
  85   1              slave_nearby_speech();
  86   1              // handle with battery status 
  87   1              verifybattery(ADC_check_result);                                        
  88   1              // rotate on speech
  89   1              key_rotate_on_speech();
  90   1              nearby_away_interval = 0;
  91   1              
  92   1              // turn on ADC timer
  93   1              ADC_timecount_EN = 1;
  94   1              
  95   1              disable_sensor();
  96   1              }
  97                  
  98          /*---------------------------------------------------
  99                  end of file
 100          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     42    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
