C51 COMPILER V9.51   OTHER                                                                 06/04/2014 15:22:55 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE OTHER
OBJECT MODULE PLACED IN Other.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE Other.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*---------------------------------------------------
   2                  Other.c (v1.00)
   3                  
   4                  其他程序
   5          ---------------------------------------------------*/
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Other.h"
  11          #include "Delay.h"
  12          #include "communication.h"
  13          
  14          /*------- Public variable declarations --------------------------*/
  15          extern bit position_sensor_EN;                  //位置传感器，即倒地抬起传感器总开关，1的时候，检测这两个传感器
  16          extern bit fell_flag;                                           //判断主机倒下后，置1
  17          extern bit raised_flag;                                 //判断主机被抬起后，置1
  18          extern tByte sensor_trigger_count;              //传感器触发计数
  19          extern tByte sensor_1ststage_count;     //传感器第一阶段判断低电平的计数
  20          extern tWord sensor_3rdstage_time;                      //传感器进入第三阶段的时间，
  21          extern tByte sensor_3rdstage_effcount;          //传感器进入第三阶段后，有效触碰次数的计数
  22          extern tByte sensor_3rdstage_count;                     //传感器进入第三阶段后，低电平的计数
  23          extern tWord sensor_3rdstage_interval;          //传感器在第三阶段中，每次有效低电平计数之间的时间间隔。在这期间的
             -低电平不认为有效。
  24          extern tWord sensor_2ndstage_time;              //传感器进入第二阶段后流逝时间的计数
  25          extern tByte sensor_2ndstage_count;             //传感器进入第二阶段检测时，计算低电平的时间
  26          extern bit stolen_alarm_flag;                                   // when host been touch 3 times, this flag 1 before alarm voice present,
             - not to detect sensor for 1st voice alarm.
  27          extern bit host_stolen_alarm1_EN;      //判断为被盗报警后的第一段语音使能
  28          extern bit host_stolen_alarm2_EN;      //判断为被盗报警后的第二段语音使能
  29          extern tByte host_stolen_alarm1_count;          //判断为被盗报警后的第一段语音次数
  30          extern tByte host_stolen_alarm2_count;          //判断为被盗报警后的第二段语音次数
  31          extern bit raised_fell_flag;                                    //倒地或者抬起触发后，此标志位置1
  32          extern tByte wire_broken_count;         // 作为断线后的时间检测
  33          extern bit battery_stolen_EN;                   // 作为电池被盗的使能端
  34          extern tByte battery_stolen_count;      // 作为电池被盗的报警次数
  35          extern bit sensor_EN;
  36          extern tByte enable_sensor_delay_count;         // 传感器延迟的时间
  37          extern bit enable_sensor_delayEN;
  38          
  39          /*-------------------------------------------------------
  40                  magnet_CW()
  41                  电磁铁正转，顺时针，将锁打开
  42          --------------------------------------------------------*/
  43          void magnet_CW(void)
  44                  {
  45   1              send_code_to_lock();
  46   1      
  47   1              MagentControl_1 = 1;
  48   1              MagentControl_2 = 0;
  49   1              magnet_delay();
  50   1              MagentControl_1 = 1;
  51   1              MagentControl_2 = 1;
  52   1              motor_lock = 0;
  53   1              }
C51 COMPILER V9.51   OTHER                                                                 06/04/2014 15:22:55 PAGE 2   

  54          
  55          /*-------------------------------------------------------
  56                  magnet_ACW()
  57                  电磁铁反转，逆时针，将锁关闭
  58          --------------------------------------------------------*/
  59          void magnet_ACW(void)
  60                  {
  61   1              motor_lock = 1;
  62   1              MagentControl_1 = 0;
  63   1              MagentControl_2 = 1;
  64   1              magnet_delay2();
  65   1              MagentControl_1 = 1;
  66   1              MagentControl_2 = 1;
  67   1              }
  68                  
  69          /*----------------------------------------------------
  70                  disable_sensor()
  71                  打开振动传感器和三轴传感器，
  72          ----------------------------------------------------*/
  73          void disable_sensor(void)
  74                  {
  75   1              // disable position sensor(vertical and horizontal) and vibration sensor
  76   1              position_sensor_EN = 0; 
  77   1              sensor_EN = 0;
  78   1              // reset all the flag in sensor
  79   1              fell_flag=0;  
  80   1              raised_flag=0;
  81   1              sensor_trigger_count = 0;
  82   1              sensor_1ststage_count = 0;
  83   1              sensor_2ndstage_count = 0;
  84   1              sensor_2ndstage_time = 0;
  85   1              sensor_3rdstage_time = 0;
  86   1              sensor_3rdstage_interval = 0;
  87   1              sensor_3rdstage_count = 0;
  88   1              sensor_3rdstage_effcount = 0;
  89   1              stolen_alarm_flag = 0;
  90   1              host_stolen_alarm1_EN = 0;
  91   1              host_stolen_alarm1_count = 0;
  92   1              host_stolen_alarm2_EN = 0;
  93   1              host_stolen_alarm2_count = 0;
  94   1              
  95   1              raised_fell_flag = 0;
  96   1              
  97   1              // reset the wire broken count
  98   1              wire_broken_count = 0;
  99   1              
 100   1              // reset battery stolen
 101   1              battery_stolen_EN = 0;
 102   1              battery_stolen_count = 0;       
 103   1              }
 104                  
 105          /*--------------------------------------------------------
 106                  enable_sensor()
 107                  打开传感器，使其偷盗
 108          ---------------------------------------------------------*/
 109          void enable_sensor(void)
 110                  {
 111   1              // enable position sensor(vertical and horizontal) and vibration sensor
 112   1              position_sensor_EN = 1; 
 113   1              sensor_EN = 1;
 114   1              // reset relatively sensor count
 115   1              sensor_trigger_count = 0;
C51 COMPILER V9.51   OTHER                                                                 06/04/2014 15:22:55 PAGE 3   

 116   1              sensor_1ststage_count = 0;
 117   1              enable_sensor_delayEN = 0;
 118   1              enable_sensor_delay_count = 0;  
 119   1              }
 120          
 121          /*---------------------------------------------------
 122                  end of file
 123          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     95    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
